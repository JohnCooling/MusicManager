//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL.MusicWatcher {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MusicWatcher.WCF_Service", ConfigurationName="MusicWatcher.IMusicWatcher")]
    public interface IMusicWatcher {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MusicWatcher.WCF_Service/IMusicWatcher/MusicDirectories", ReplyAction="http://MusicWatcher.WCF_Service/IMusicWatcher/MusicDirectoriesResponse")]
        string[] MusicDirectories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://MusicWatcher.WCF_Service/IMusicWatcher/MusicDirectories", ReplyAction="http://MusicWatcher.WCF_Service/IMusicWatcher/MusicDirectoriesResponse")]
        System.Threading.Tasks.Task<string[]> MusicDirectoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMusicWatcherChannel : BLL.MusicWatcher.IMusicWatcher, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MusicWatcherClient : System.ServiceModel.ClientBase<BLL.MusicWatcher.IMusicWatcher>, BLL.MusicWatcher.IMusicWatcher {
        
        public MusicWatcherClient() {
        }
        
        public MusicWatcherClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MusicWatcherClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicWatcherClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MusicWatcherClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] MusicDirectories() {
            return base.Channel.MusicDirectories();
        }
        
        public System.Threading.Tasks.Task<string[]> MusicDirectoriesAsync() {
            return base.Channel.MusicDirectoriesAsync();
        }
    }
}
